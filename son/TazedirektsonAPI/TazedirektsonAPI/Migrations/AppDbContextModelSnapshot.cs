// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TazedirektsonAPI.Persistence.Contexts;

namespace TazedirektsonAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("TazedirektsonAPI.Core.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TazedirektsonAPI.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "batuhan4644@gmail.com",
                            LastName = "Gorgel",
                            Name = "Batuhan",
                            Password = "1234",
                            UserName = "GorgelBatuhan"
                        },
                        new
                        {
                            Id = 2,
                            Email = "OrkunOzturk@gmail.com",
                            LastName = "Ozturk",
                            Name = "Orkun",
                            Password = "4157",
                            UserName = "OzturkOrkun"
                        });
                });

            modelBuilder.Entity("TazedirektsonAPI.Core.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("TazedirektsonAPI.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Categories");


                    b.HasData(
                        new
                        {
                            Id = 100,
                            Name = "sebze meyve"
                        },
                        new
                        {
                            Id = 101,
                            Name = "et urunleri"
                        },
                        new
                        {
                            Id = 102,
                            Name = "sut ve sut urunleri"
                        },
                        new
                        {
                            Id = 103,
                            Name = "kahvaltilik urunler"
                        },
                        new
                        {
                            Id = 104,
                            Name = "temel gidalar"
                        },
                        new
                        {
                            Id = 105,
                            Name = "atistirmaliklar"
                        },
                        new
                        {
                            Id = 106,
                            Name = "unlu mamuller"
                        },
                        new
                        {
                            Id = 107,
                            Name = "icecekler"
                        },
                        new
                        {
                            Id = 108,
                            Name = "bebek cocuk urunleri"
                        },
                        new
                        {
                            Id = 109,
                            Name = "ozel beslenme"
                        });
                });

            modelBuilder.Entity("TazedirektsonAPI.Domain.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            Name = "Kireçburnu",
                            ProductId = 100,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/5079090/05079090-4d9ec4-221x148.jpg"
                        },
                        new
                        {
                            Id = 101,
                            Name = "Alaçatı Ev Kurabiyecisi",
                            ProductId = 101,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/6041304/06041304-ecd054-221x148.jpg"
                        },
                        new
                        {
                            Id = 102,
                            Name = "MesteMacher",
                            ProductId = 102,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/5058937/05058937-d3e823-221x148.jpg"
                        },
                        new
                        {
                            Id = 103,
                            Name = "Delba",
                            ProductId = 103,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/05110381/05110381-810845-221x148.jpg"
                        },
                        new
                        {
                            Id = 104,
                            Name = "Wasa",
                            ProductId = 104,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/05061003/05061003-a75ef4-221x148.jpg"
                        },
                        new
                        {
                            Id = 105,
                            Name = "Saffet Abdullah",
                            ProductId = 105,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/5051781/05051781-a4e7ef-221x148.jpg"
                        },
                        new
                        {
                            Id = 106,
                            Name = "Doygun",
                            ProductId = 106,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/05052110/05052110-20626b-221x148.jpgg"
                        },
                        new
                        {
                            Id = 107,
                            Name = "Chefline3",
                            ProductId = 107,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/08054094/08054094-4650f0-221x148.jpg"
                        },
                        new
                        {
                            Id = 108,
                            Name = "Bizim Yufka",
                            ProductId = 108,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/08900008/08900008-57755c-221x148.jpg"
                        },
                        new
                        {
                            Id = 109,
                            Name = "Chefline",
                            ProductId = 109,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/05061003/05061003-a75ef4-221x148.jpg"
                        },
                        new
                        {
                            Id = 110,
                            Name = "Bizim Yufka2",
                            ProductId = 110,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/28200017/28200017-19435d-221x148.jpg"
                        },
                        new
                        {
                            Id = 111,
                            Name = "Taze Direkt",
                            ProductId = 111,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/08900010/08900010-4891cc-221x148.jpg"
                        },
                        
                        new
                        {
                            Id = 112,
                            Name = "Wasa2",
                            ProductId = 112,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/08054093/08054093-8f08e7-221x148.jpg"
                        });
                });

            modelBuilder.Entity("TazedirektsonAPI.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Cost")
                        .HasColumnType("REAL");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("KargoFiyatı")
                        .HasColumnType("REAL");

                    b.Property<byte>("Marka")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("NumberInStock")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PreviousCost")
                        .HasColumnType("REAL");

                    b.Property<byte>("Tag")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToplamSiparisSayisi")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            CategoryId = 101,
                            Cost = 59.0,
                            Info = "Ekşi Maya Rustik Ekmek 950 g",
                            KargoFiyatı = 0.0,
                            Marka = (byte)8,
                            Name = "Pandos",
                            NumberInStock = 15,
                            PreviousCost = 47.0,
                            Tag = (byte)1,
                            ToplamSiparisSayisi = 0,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/27307059/27307059-372d83-221x148.jpg"
                        },
                        new
                        {
                            Id = 101,
                            CategoryId = 101,
                            Cost = 69.0,
                            Info = "Geleneksel Çay Kurabiyesi 200 g",
                            KargoFiyatı = 0.0,
                            Marka = (byte)1,
                            Name = "Humm",
                            NumberInStock = 9,
                            PreviousCost = 63.0,
                            Tag = (byte)3,
                            ToplamSiparisSayisi = 0,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/05061237/05061237-662d6b-221x148.jpg"
                        },
                        new
                        {
                            Id = 102,
                            CategoryId = 101,
                            Cost = 49.0,
                            Info = "Gurme Hamburger Ekmeği 4'lü 280 g",
                            KargoFiyatı = 0.0,
                            Marka = (byte)7,
                            Name = "Sunny Dates",
                            NumberInStock = 10,
                            PreviousCost = 45.0,
                            Tag = (byte)1,
                            ToplamSiparisSayisi = 0,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/05061327/05061327-9ce0b1-221x148.jpg"
                        },
                        new
                        {
                            Id = 103,
                            CategoryId = 101,
                            Cost = 43.0,
                            Info = "Dutlu Fındıklı Kurabiye 80 gr",
                            KargoFiyatı = 0.0,
                            Marka = (byte)6,
                            Name = "Humm",
                            NumberInStock = 8,
                            PreviousCost = 50.0,
                            Tag = (byte)3,
                            ToplamSiparisSayisi = 0,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/56010575/56010575-693b6a-221x148.jpg"
                        },
                        new
                        {
                            Id = 104,
                            CategoryId = 101,
                            Cost = 49.0,
                            Info = "Ayçekirdekli Çavdarlı Tam Tahıl Ekmeği 500 g",
                            KargoFiyatı = 0.0,
                            Marka = (byte)4,
                            Name = "Tazedirekt",
                            NumberInStock = 15,
                            PreviousCost = 50.0,
                            Tag = (byte)2,
                            ToplamSiparisSayisi = 0,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/05061327/05061327-9ce0b1-221x148.jpg"
                        },
                        new
                        {
                            Id = 105,
                            CategoryId = 101,
                            Cost = 29.0,
                            Info = "Organik Peynirli Kinoalı Kraker 60 g",
                            KargoFiyatı = 0.0,
                            Marka = (byte)5,
                            Name = "Sunny Dates2",
                            NumberInStock = 3,
                            PreviousCost = 20.0,
                            Tag = (byte)2,
                            ToplamSiparisSayisi = 0,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/11571900/11571900-7c8149-221x148.jpg"
                        },
                        new
                        {
                            Id = 106,
                            CategoryId = 101,
                            Cost = 29.0,
                            Info = "Organik Yaban Mersinli Pirinçli Bebek Gofreti 30 g",
                            KargoFiyatı = 0.0,
                            Marka = (byte)4,
                            Name = "Gekoo",
                            NumberInStock = 35,
                            PreviousCost = 25.0,
                            Tag = (byte)1,
                            ToplamSiparisSayisi = 0,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/56010551/56010551-2b7bbb-221x148.jpg"
                        },
                        new
                        {
                            Id = 107,
                            CategoryId = 101,
                            Cost = 19.0,
                            Info = "Organik Armut Püresi 125 g",
                            KargoFiyatı = 0.0,
                            Marka = (byte)4,
                            Name = "Chefru",
                            NumberInStock = 5,
                            PreviousCost = 11.0,
                            Tag = (byte)2,
                            ToplamSiparisSayisi = 0,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/8089162/08089162-203f25-221x148.jpg"
                        },
  
                        new
                        {
                            Id = 108,
                            CategoryId = 101,
                            Cost = 49.0,
                            Info = "Organik Yaban Mersinli Pirinçli Bebek Gofreti 50 g",
                            KargoFiyatı = 0.0,
                            Marka = (byte)7,
                            Name = "Gekoo2",
                            NumberInStock = 35,
                            PreviousCost = 48.0,
                            Tag = (byte)3,
                            ToplamSiparisSayisi = 0,
                            Url = "https://migros-dali-storage-prod.global.ssl.fastly.net/tazedirekt/product/56010539/56010539-011e19-221x148.jpg"
                        });
                });

            modelBuilder.Entity("TazedirektsonAPI.Domain.Models.Sepet", b =>
                {
                    b.Property<int>("SepetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Adet")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SepeteKonulmaTarihi")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SepetId");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserId");

                    b.ToTable("Sepet");

                    b.HasData(
                        new
                        {
                            SepetId = 1,
                            Adet = 1,
                            ProductID = 117,
                            SepeteKonulmaTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            SepetId = 2,
                            Adet = 1,
                            ProductID = 118,
                            SepeteKonulmaTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TazedirektsonAPI.Domain.Models.Siparis", b =>
                {
                    b.Property<int>("SiparisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Adet")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SiparisTarihi")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SiparisId");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserId");

                    b.ToTable("Siparis");

                    b.HasData(
                        new
                        {
                            SiparisId = 1,
                            Adet = 1,
                            ProductID = 117,
                            SiparisTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            SiparisId = 2,
                            Adet = 1,
                            ProductID = 118,
                            SiparisTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TazedirektsonAPI.Core.Models.UserRole", b =>
                {
                    b.HasOne("TazedirektsonAPI.Core.Models.Role", "Role")
                        .WithMany("UsersRole")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TazedirektsonAPI.Core.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TazedirektsonAPI.Domain.Models.Image", b =>
                {
                    b.HasOne("TazedirektsonAPI.Domain.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TazedirektsonAPI.Domain.Models.Product", b =>
                {
                    b.HasOne("TazedirektsonAPI.Domain.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TazedirektsonAPI.Domain.Models.Sepet", b =>
                {
                    b.HasOne("TazedirektsonAPI.Domain.Models.Product", "Product")
                        .WithMany("Sepetler")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TazedirektsonAPI.Core.Models.User", "User")
                        .WithMany("Sepetler")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TazedirektsonAPI.Domain.Models.Siparis", b =>
                {
                    b.HasOne("TazedirektsonAPI.Domain.Models.Product", "Product")
                        .WithMany("Siparisler")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TazedirektsonAPI.Core.Models.User", "User")
                        .WithMany("Siparisler")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
